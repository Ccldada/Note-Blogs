import{_ as t,D as n,c as l,j as s,I as h,w as k,a as i,a3 as p,o as e}from"./chunks/framework.DWT__QHq.js";const Q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"WCMiniProgram/2.样式和组件.md","filePath":"WCMiniProgram/2.样式和组件.md"}'),E={name:"WCMiniProgram/2.样式和组件.md"},d=s("h2",{id:"常用样式和组件",tabindex:"-1"},[i("常用样式和组件 "),s("a",{class:"header-anchor",href:"#常用样式和组件","aria-label":'Permalink to "常用样式和组件"'},"​")],-1),g=s("h3",{id:"_1-组件和样式介绍",tabindex:"-1"},[i("1. 组件和样式介绍 "),s("a",{class:"header-anchor",href:"#_1-组件和样式介绍","aria-label":'Permalink to "1. 组件和样式介绍"'},"​")],-1),r=s("code",null,"HTML",-1),y=s("code",null,"DOM",-1),c=s("code",null,"BOM",-1),o=s("code",null,"CSS",-1),F=s("code",null,"WXML",-1),B=s("code",null,"HTML",-1),C=s("code",null,"WXML",-1),D=s("code",null,"div",-1),f=s("code",null,"p",-1),u=s("code",null,"span",-1),A=s("code",null,"img",-1),v=s("code",null,"a",-1),x=s("code",null,"WXML",-1),m=s("code",null,"view",-1),b=s("code",null,"text",-1),w=s("code",null,"image",-1),q=s("code",null,"navigator",-1),_=s("strong",null,'小程序提供的这些标签，我们称为 "组件"',-1),S=s("code",null,"WXSS",-1),P=s("code",null,"CSS",-1),T=s("code",null,"WXSS",-1),W=s("code",null,"CSS",-1),M=s("code",null,"WXSS",-1),j=s("code",null,"rpx",-1),z=s("code",null,"WXSS",-1),X=s("code",null,"CSS",-1),L=p("",102);function N(V,H,I,R,$,J){const a=n("font");return e(),l("div",null,[d,g,s("p",null,[s("strong",null,[h(a,{color:"red"},{default:k(()=>[i("但在小程序中不能使用 "),r,i(" 标签，也就没有 "),y,i(" 和 "),c,i("，同时仅仅支持部分 "),o,i("选择器")]),_:1})]),i(" 其中 "),F,i(" 充当的就是类似 "),B,i(" 的角色， 在 "),C,i(" 中没有"),D,i("、"),f,i("、 "),u,i("、"),A,i("、"),v,i(" 等标签， 在 "),x,i(" 中需要使用 小程序提供的 "),m,i("、"),b,i(" 、"),w,i("、"),q,i(" 等标签来构建页面结构， "),_,S,i(" 则充当的就是类似 "),P,i(" 的角色，"),T,i(" 具有 "),W,i(" 大部分的特性， 小程序在 "),M,i(" 也做了一些扩充和修改，新增了尺寸单位 "),j,i("、提供了全局的样式和局部样式，另外需要注意的是"),z,i(" 仅支持部分 "),X,i(" 选择器。")]),L])}const Z=t(E,[["render",N]]);export{Q as __pageData,Z as default};
